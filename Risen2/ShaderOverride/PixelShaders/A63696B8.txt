//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CamDir;
//   sampler2D DepthSampler;
//   float2 NearFar;
//   float4 ScreenToTexCoord;
//   sampler2D ShadowMaskSampler;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   CamDir            c0       1
//   NearFar           c1       1
//   ScreenToTexCoord  c2       1
//   DepthSampler      s0       1
//   ShadowMaskSampler s1       1
//
//
// Default values:
//
//   CamDir
//     c0   = { 0, 0, 0, 0 };
//
//   NearFar
//     c1   = { 0, 0, 0, 0 };
//
//   ScreenToTexCoord
//     c2   = { 0, 0, 0, 0 };
//

// c220 = InverseViewProjection - from parent VS

// Point lights - interior - no specular
// similar fix as 92EAC913

    ps_3_0
    def c3, 3, 1, 0, 0
def c200, -100, 230000, 0.0625, 1
    dcl_texcoord v0.xyz
    dcl_texcoord1 v1.xyz
    dcl_texcoord2_pp v2
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
dcl_2d s13
    
    // Get Shadow mask + depth
    mad r0.xy, vPos, c2, c2.zwzw
    texld r1, r0, s0
    texld_pp r0, r0, s1
mov r28, r1								// store depth
    
    mul r0.y, r1.x, c1.y
    nrm r1.xyz, v1
    dp3 r0.z, c0, r1
    rcp r0.z, r0.z
    mul r0.y, r0.z, r0.y
    //mad_pp r0.yzw, r1.xxyz, -r0.y, v2.xxyz	// Split that instruction in two:
mul r20, r1.xxyz, -r0.y							// r20 is in world coordinates

// Pixel shader correction formula
texld r29, c200.z, s13
mul r29.w, c200.y, r28.x		// c / depth
mul r29.w, r29.w, r29.x			// * sep

// Transform correction from screen to world coordinates
mul r30.x, r29.w, c220.x
mul r30.y, r29.w, c221.x
mul r30.z, r29.w, c222.x
mul r30.w, r29.w, c223.x

// Apply correction
add r20.yzw, r20, r30.xxyz
// 2nd half of split instruction:
add r0.yzw, r20, v2.xxyz
    
    dp3_pp r0.y, r0.yzww, r0.yzww
    rsq_pp r0.y, r0.y
    rcp_pp r0.y, r0.y
    mul_sat_pp r0.y, r0.y, v2.w
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.w, r0.z, c3.x
    dp2add_pp r0.y, r0.z, r0.y, -r0.w
    add_pp r0.y, r0.y, c3.y
    mul_pp r0.x, r0.x, r0.y				// r0.x still depth ??
    mul oC0.xyz, r0.x, v0
    mov oC0.w, c3.z

// approximately 23 instruction slots used (2 texture, 21 arithmetic)
