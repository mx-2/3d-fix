//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CamDir;
//   sampler2D DepthSampler;
//   sampler2D DiffuseLookupSampler;
//   float DizzerKernelSize;
//   sampler2D DizzerSampler;
//   float2 NearFar;
//   sampler2D NormalSampler;
//   float4 ScreenToTexCoord;
//   sampler2D ShadowMaskSampler;
//   sampler2D ShadowSampler;
//   sampler2D SpecularLookupSampler;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   CamDir                c0       1
//   NearFar               c1       1
//   ScreenToTexCoord      c2       1
//   DizzerKernelSize      c3       1
//   DepthSampler          s0       1
//   NormalSampler         s1       1
//   ShadowMaskSampler     s2       1
//   DizzerSampler         s3       1
//   ShadowSampler         s4       1
//   DiffuseLookupSampler  s5       1
//   SpecularLookupSampler s6       1
//
//
// Default values:
//
//   CamDir
//     c0   = { 0, 0, 0, 0 };
//
//   NearFar
//     c1   = { 0, 0, 0, 0 };
//
//   ScreenToTexCoord
//     c2   = { 0, 0, 0, 0 };
//
//   DizzerKernelSize
//     c3   = { 0.01, 0, 0, 0 };
//

// Point lights with cube mapped shadows
// Specular ?

// c210 - InverseViewProj - from parent VS
// c214 - ViewProj - from parent VS

    ps_3_0
def c200, 1, 0, 0.0625, 0
dcl_2d s13

    def c4, 0.124511719, 0.000244140625, 0, 0
    def c5, 1, 2, -1, 0
    def c6, 0.125, 3, 0.5, 0.99609375
    dcl_color v0
    dcl_texcoord v1
    dcl_texcoord1 v2.xyz
    dcl_texcoord2_pp v3
    dcl_texcoord3 v4.xy
    dcl_texcoord4 v5
    dcl_texcoord5 v6
    dcl_texcoord6 v7
    dcl_texcoord7 v8
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    mad r0.xy, vPos, c2, c2.zwzw
    texld r1, r0, s0				// sample depth
    mul r0.z, r1.x, c1.y			// scale depth
    nrm_pp r1.xyz, v2
    dp3 r0.w, c0, r1
    rcp r0.w, r0.w
    mul r0.z, r0.w, r0.z			// scale depth
    mul r2.xyz, r0.z, r1			// r2 determines clipping planes
									// r2 is r1 multiplied with scaled depth
									// -> fix r1 and r2

// World space correction for shadows:
mov r20.xyz, r2
mov r20.w, c200.y

// ViewProjection
dp4 r30.x, c214, r20
dp4 r30.y, c215, r20
dp4 r30.z, c216, r20
dp4 r30.w, c217, r20

// Subtract stereo correction
texldl r31, c200.z, s13
add r31.w, r30.w, -r31.y
mad r30.x, -r31.w, r31.x, r30.x

// Inverse ViewProjection
dp4 r2.x, c210, r30
dp4 r2.y, c211, r30
dp4 r2.z, c212, r30

// Go back and fix r1 as well as it is used throughout the rest of the shader
// for light placement:
rcp r30.w, r0.z
mul r1.xyz, r30.w, r2		// Divide by depth because r2 = r1 * depth

    mad_pp r3.xyz, r1, -r0.z, v3
    mov r2.w, c5.x
    dp4 r4.z, r2, v7
    dp4 r4.x, r2, v5
    dp4 r4.y, r2, v6
    dp4 r0.z, r2, v8
    add r2, -r4_abs.xyzz, r0.z
    texkill r2
    rcp r0.w, r0.z
    mul r2, r0.w, r4.xyxy
    mad r2, r2, v1.xyxy, v1.zwzw
    mul_pp r4.xy, r0, v4
    texld_pp r4, r4, s3
    mad r4, r4, c5.y, c5.z
    mad r5, r4.xzyz, c3.x, r2.zwzw

    // load shadow layers - cube problems

    texld_pp r6, r5, s4					// sample shadow - a bit darker
    texld_pp r5, r5.zwzw, s4			// nothing
    mov_pp r6.y, r5.x
    mad r5, r4.ywzw, c3.x, r2.zwzw
    texld_pp r7, r5, s4
    texld_pp r5, r5.zwzw, s4
    mov_pp r6.w, r5.x
    mov_pp r6.z, r7.x
    add r5, r0.z, -r6
    cmp_pp r5, r5, c5.w, c5.x
    dp4_pp r0.w, r5, c6.x
    mad r5, r4.zxwx, c3.x, r2.zwzw
    mad r2, r4.wywz, c3.x, r2
    texld_pp r4, r5, s4
    texld_pp r5, r5.zwzw, s4
    mov_pp r4.y, r5.x
    texld_pp r5, r2, s4
    texld_pp r2, r2.zwzw, s4

    mov_pp r4.w, r2.x
    mov_pp r4.z, r5.x
    add r2, r0.z, -r4
    cmp_pp r2, r2, c5.w, c5.x
    dp4_pp r0.z, r2, c6.x
    add_pp r0.z, r0.z, r0.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mul_pp r2.xyz, r0.w, r3
    mad_pp r3.xyz, r3, r0.w, -r1
    rcp_pp r0.w, r0.w
    mul_sat_pp r0.w, r0.w, v3.w
    nrm_pp r4.xyz, r3
    texld_pp r3, r0, s1
    texld_pp r5, r0, s2
    mul_pp r0.x, r5.y, c6.w
    mad_pp r3.xyz, r3, c5.y, c5.z
    mov_pp r5.y, r3.w
    nrm_pp r6.xyz, r3
    dp3_pp r0.y, r2, r6
    dp3_pp r2.y, r2, -r1
    dp3_pp r1.w, -r1, r6
    dp3_sat_pp r3.z, r4, r6
    mul_pp r2.x, r0.z, r0.y
    mad_pp r3.xy, r2, c6.z, c6.z
    mad r0.xyz, r3, c4.x, r0.x
    add_pp r1.xyz, r0, c4.y
    //texld_pp r3, r1.ywzw, s5		// Totaly displaced lighting, related to specular ?
									// right eye: left of screen, left eye: right of screen
									// Requires another stereo correction ?
									// Almost no visual loss visible if disabled.
    mul_pp r0.x, r2.x, r3.w
    texld_pp r2, r1.xwzw, s5
    texld_pp r3, r1.xwzw, s6
    mov_pp r5.x, r1.z
    texld_pp r1, r5, s6
    mul_pp r1.w, r3.y, r1.x
    max_pp r1.xyz, r0.x, r2
    mul r1, r1, v0
    mul_pp r0.x, r0.w, r0.w
    mul_pp r0.y, r0.x, c6.y
    dp2add_pp r0.x, r0.x, r0.w, -r0.y
    add_pp r0.x, r0.x, c5.x
    mul_pp oC0, r0.x, r1

// approximately 89 instruction slots used (16 texture, 73 arithmetic)
