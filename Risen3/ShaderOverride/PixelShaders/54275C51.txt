//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float2 DepthTextureSize;
//   float2 DizzerTextureSize;
//   float2 SoftShadowKernelSize;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   DepthTextureSize     c0       1
//   DizzerTextureSize    c1       1
//   SoftShadowKernelSize c2       1
//
//
// Default values:
//
//   DepthTextureSize
//     c0   = { 0, 0, 0, 0 };
//
//   DizzerTextureSize
//     c1   = { 0, 0, 0, 0 };
//
//   SoftShadowKernelSize
//     c2   = { 0, 0, 0, 0 };
//

    // preshader
    // rcp r0.x, c1.x
    // rcp r0.y, c1.y
    // mul c0.xy, r0.xy, c0.xy
    // mul c1, c2.y, (-0.94201624, -0.39906216, 0.94558609, -0.76890725)
    // mul c2, c2.y, (-0.094184101, -0.9293887, 0.34495938, 0.2938776)
    // mul c3, c2.y, (-0.91588581, 0.45771432, -0.81544232, -0.87912464)
    // mul c4, c2.y, (-0.38277543, 0.27676845, 0.97484398, 0.75648379)
    // mul c5, c2.y, (0.44323325, -0.97511554, 0.53742981, -0.4737342)
    // mul c6, c2.y, (-0.26496911, -0.41893023, 0.79197514, 0.19090188)
    // mul c7, c2.y, (-0.2418884, 0.99706507, -0.81409955, 0.9143759)
    // mul c8, c2.y, (0.19984126, 0.78641367, 0.14383161, -0.1410079)
    // neg r0.x, c2.x
    // add c9.x, r0.x, c2.y

// approximately 13 instructions used
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   sampler2D DepthTexture_ss;
//   float4x4 DepthToShadowMatrix;
//   float4x4 DepthToVarianceShadowMatrix;
//   sampler2D DizzerTexture_ss;
//   sampler2D ShadowTexture_ss;
//   float2 SoftShadowKernelSize;
//   float SoftShadowRange;
//   sampler2D VarianceShadowTexture_ss;
//
//
// Registers:
//
//   Name                        Reg   Size
//   --------------------------- ----- ----
//   DepthToShadowMatrix         c10      3
//   DepthToVarianceShadowMatrix c13      3
//   SoftShadowRange             c16      1
//   SoftShadowKernelSize        c17      1
//   DepthTexture_ss             s0       1
//   DizzerTexture_ss            s1       1
//   ShadowTexture_ss            s2       1
//   VarianceShadowTexture_ss    s3       1
//
//
// Default values:
//
//   DepthToShadowMatrix
//     c10  = { 0, 0, 0, 0 };
//     c11  = { 0, 0, 0, 0 };
//     c12  = { 0, 0, 0, 0 };
//
//   DepthToVarianceShadowMatrix
//     c13  = { 0, 0, 0, 0 };
//     c14  = { 0, 0, 0, 0 };
//     c15  = { 0, 0, 0, 0 };
//
//   SoftShadowRange
//     c16  = { 0, 0, 0, 0 };
//
//   SoftShadowKernelSize
//     c17  = { 0, 0, 0, 0 };
//

// Near shadows

    ps_3_0
// Helix sampler
def c200, 0, 0.01, 0.0625, -0.00000415
dcl_2d s13
    def c18, 0.0625, 0.457714319, -0.879124641, 9.99999975e-006
    def c19, 0.199841261, 0.143831611, -0.699999988, 3.33333325
    def c20, 1, 0, -1, 2
    def c21, -0.241888404, -0.81409955, 0.78641367, -0.1410079
    def c22, 0.443233252, 0.53742981, -0.418930233, 0.190901875
    def c23, -0.26496911, 0.791975141, 0.997065067, 0.914375901
    def c24, -0.382775426, 0.974843979, -0.975115538, -0.4737342
    def c25, -0.915885806, -0.815442324, 0.276768446, 0.756483793
    def c26, -0.929388702, 0.293877602, -0.0941841006, 0.344959378
    def c27, -0.399062157, -0.768907249, -0.942016244, 0.945586085
    def c28, 1, -1, 0, -0
    dcl_texcoord v0
    dcl_texcoord1 v1.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
	
    rcp r0.x, v1.z
    mul r0.xyz, r0.x, v1	// r0 := v1 / v1.z
    texldp r1, v0, s0		// Sample depth
    mul r0.xyz, r0, r1.x	// Multiply 3D coordinate in r0 with depth buffer -> z = depth
    mov r0.w, c20.x			// r0.w := 1
	
// Subtractive stereo correction
// r0.z contains depth
texldl r31, c200.z, s13
mul r31.w, r31.y, c200.w		// Scale convergence with c200.w
add r31.w, r31.w, r0.z			// depth - convergence
mad r0.x, r31.w, -r31.x, r0.x	// (.) * separation

    dp4 r1.x, r0, c12
    dp4 r2.x, r0, c10
    dp4 r2.y, r0, c11
    add r3, r2.xyxy, c1
    texld r4, r3, s2
    texld r3, r3.zwzw, s2
    mov r4.y, r3.x
    add r3, r2.xyxy, c2
    texld r5, r3, s2
    texld r3, r3.zwzw, s2
    mov r4.w, r3.x
    mov r4.z, r5.x
    add r3, -r1.x, r4
    cmp r3, r3, c20.y, c20.x
    dp4 r1.y, r4, r3
    dp4 r1.z, r3, c20.x
    add r3, r2.xyxy, c3
    texld r4, r3, s2
    texld r3, r3.zwzw, s2
    mov r4.y, r3.x
    add r3, r2.xyxy, c4
    texld r5, r3, s2
    texld r3, r3.zwzw, s2
    mov r4.w, r3.x
    mov r4.z, r5.x
    add r3, -r1.x, r4
    cmp r3, r3, c20.y, c20.x
    dp4 r1.w, r4, r3
    dp4 r2.z, r3, c20.x
    add r1.z, r1.z, r2.z
    add r1.y, r1.w, r1.y
    add r3, r2.xyxy, c5
    texld r4, r3, s2
    texld r3, r3.zwzw, s2
    mov r4.y, r3.x
    add r3, r2.xyxy, c6
    texld r5, r3, s2
    texld r3, r3.zwzw, s2
    mov r4.w, r3.x
    mov r4.z, r5.x
    add r3, -r1.x, r4
    cmp r3, r3, c20.y, c20.x
    dp4 r1.w, r4, r3
    dp4 r2.z, r3, c20.x
    add r1.z, r1.z, r2.z
    add r1.y, r1.w, r1.y
    add r3, r2.xyxy, c7
    texld r4, r3, s2
    texld r3, r3.zwzw, s2
    mov r4.y, r3.x
    add r3, r2.xyxy, c8
    texld r5, r3, s2
    texld r3, r3.zwzw, s2
    mov r4.w, r3.x
    mov r4.z, r5.x
    add r3, -r1.x, r4
    cmp r3, r3, c20.y, c20.x
    dp4 r1.w, r4, r3
    dp4 r2.z, r3, c20.x
    add r1.z, r1.z, r2.z
    add r1.y, r1.w, r1.y
    rcp r1.w, r1.z
    add r1.z, r1.z, c20.z
    mad r1.y, r1.y, -r1.w, r1.x
    mul_sat r1.y, r1.y, c16.x
    mov r3.x, c9.x
    mad r1.y, r1.y, r3.x, c17.x
    rcp r1.w, v0.w
    mul r2.zw, r1.w, v0.xyxy
    mul r2.zw, r2, c0.xyxy
    texld r3, r2.zwzw, s1
    mad r3, r3, c20.w, c20.z
    mul r4, r3.ywyw, c27.xxyy
    mad r4, r3.xzxz, c27.zzww, r4
    mad r4, r4, r1.y, r2.xyxy
    texld r5, r4, s2
    texld r4, r4.zwzw, s2
    mov r5.y, r4.x
    mul r4, r3.ywyw, c26.xxyy
    mad r4, r3.xzxz, c26.zzww, r4
    mad r4, r4, r1.y, r2.xyxy
    texld r6, r4, s2
    texld r4, r4.zwzw, s2
    mov r5.w, r4.x
    mov r5.z, r6.x
    add r4, r1.x, -r5
    cmp r4, r4, c20.y, c20.x
    dp4 r1.w, r4, c18.x
    mul r4, r3.ywyw, c18.yyzz
    mad r4, r3.xzxz, c25.xxyy, r4
    mad r4, r4, r1.y, r2.xyxy
    texld r5, r4, s2
    texld r4, r4.zwzw, s2
    mov r5.y, r4.x
    mul r4, r3.ywyw, c25.zzww
    mad r4, r3.xzxz, c24.xxyy, r4
    mad r4, r4, r1.y, r2.xyxy
    texld r6, r4, s2
    texld r4, r4.zwzw, s2
    mov r5.w, r4.x
    mov r5.z, r6.x
    add r4, r1.x, -r5
    cmp r4, r4, c20.y, c20.x
    dp4 r2.z, r4, c18.x
    add r1.w, r1.w, r2.z
    mul r4, r3.ywyw, c24.zzww
    mad r4, r3.xzxz, c22.xxyy, r4
    mad r4, r4, r1.y, r2.xyxy
    texld r5, r4, s2
    texld r4, r4.zwzw, s2
    mov r5.y, r4.x
    mul r4, r3.ywyw, c22.zzww
    mad r4, r3.xzxz, c23.xxyy, r4
    mad r4, r4, r1.y, r2.xyxy
    texld r6, r4, s2
    texld r4, r4.zwzw, s2
    mov r5.w, r4.x
    mov r5.z, r6.x
    add r4, r1.x, -r5
    cmp r4, r4, c20.y, c20.x
    dp4 r2.z, r4, c18.x
    add r1.w, r1.w, r2.z
    mul r4, r3.ywyw, c23.zzww
    mad r4, r3.xzxz, c21.xxyy, r4
    mad r4, r4, r1.y, r2.xyxy
    texld r5, r4, s2
    texld r4, r4.zwzw, s2
    mov r5.y, r4.x
    mul r4, r3.ywyw, c21.zzww
    mad r3, r3.xzxz, c19.xxyy, r4
    mad r2, r3, r1.y, r2.xyxy
    texld r3, r2, s2
    texld r2, r2.zwzw, s2
    mov r5.w, r2.x
    mov r5.z, r3.x
    add r2, r1.x, -r5
    cmp r2, r2, c20.y, c20.x
    dp4 r1.x, r2, c18.x
    add r1.x, r1.x, r1.w
    cmp r1.x, r1.z, r1.x, c20.x
    dp4 r2.x, r0, c13
    dp4 r2.y, r0, c14
    dp4 r0.x, r0, c15
    texld r2, r2, s3
    add r0.x, -r0.x, r2.x
    mad_sat r0.y, r2.x, -r2.x, r2.y
    add_sat r0.y, r0.y, c18.w
    mad r0.z, r0.x, r0.x, r0.y
    cmp r0.xw, r0.x, c28.xyzy, c28.zyzw
    rcp r0.z, r0.z
    mad r0.y, r0.y, r0.z, c19.z
    mul_sat r0.y, r0.y, c19.w
    add r0.z, r0.w, r0.y
    cmp r0.x, r0.z, r0.y, r0.x
    min oC0, r0.x, r1.x

// approximately 160 instruction slots used (35 texture, 125 arithmetic)
