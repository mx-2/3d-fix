//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CamDir;
//   sampler2D DepthTexture_ss;
//   sampler2D GBuffer1Texture_ss;
//   sampler2D GBuffer2Texture_ss;
//   float2 NearFar;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   CamDir             c0       1
//   NearFar            c1       1
//   DepthTexture_ss    s0       1
//   GBuffer1Texture_ss s1       1
//   GBuffer2Texture_ss s2       1
//
//
// Default values:
//
//   CamDir
//     c0   = { 0, 0, 0, 0 };
//
//   NearFar
//     c1   = { 0, 0, 0, 0 };
//

// c210 - Inverse ViewProj - from parent VS

// Point lights - with "flies" in it

    ps_3_0
def c200, 1, 0.01, 0.0625, 0.5
dcl_2d s13
    def c2, 2, -1, 0, 1
    def c3, 13, 1, 0.600000024, -0.0500000007
    def c4, -10, 0.25, 0.125, 0
    dcl_texcoord v0.xyz		// color
    dcl_texcoord1 v1.xyz
    dcl_texcoord2_pp v2
    dcl_texcoord3 v3
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
	
    texldp_pp r0, v3, s1
    mad_pp r0.xyz, r0, c2.x, c2.y
    cmp_pp r0.w, -r0.z, c2.z, c2.w
    cmp_pp r1.x, r0.z, -c2.z, -c2.w
    add_pp r0.w, r0.w, r1.x
    dp2add_pp r1.x, r0, r0, c2.z
    add_pp r1.xy, r1.x, c2.wyzw
    mul_pp r0.w, r0.w, r1.y
    rcp r1.x, r1.x
    mul_pp r2.z, r0.w, r1.x
    texldp r3, v3, s0					// Sample depth
    mul r0.w, r3.x, c1.y				// scale depth
mov r30.x, r0.w							// Store scaled depth
    nrm_pp r3.xyz, v1
    
    dp3 r1.y, c0, r3
    rcp r1.y, r1.y
    mul r0.w, r0.w, r1.y
    //mad_pp r1.yzw, r3.xxyz, -r0.w, v2.xxyz	// Split that instruction in two:
mul r29, r3.xxyz, -r0.w							// r29 is in world coordiantes

// Stereo correction formula
texld r31, c200.z, s13
add r31.w, r30.x, -r31.y		// Scaled depth - convergence
mul r31.w, r31.w, r31.x			// (.) * separation

// Transform correction from screen to world coordinates
mul r30.x, r31.w, c210.x
mul r30.y, r31.w, c211.x
mul r30.z, r31.w, c212.x
//mul r30.w, r31.w, c213.x

// Apply correction
add r29.yzw, r29, r30.xxyz
// 2nd half of split instruction:
add r1.yzw, r29, v2.xxyz
    
    dp3_pp r0.w, r1.yzww, r1.yzww
    rsq r2.w, r0.w
    rcp_pp r0.w, r0.w
    mad_sat_pp r0.w, r0.w, v2.w, c3.w
    mul_pp r4.xyz, r0.w, v0
    mul_pp r5.xyz, r1.yzww, r2.w
    mad_pp r1.yzw, r1, r2.w, -r3.xxyz
    nrm_pp r6.xyz, r1.yzww
    add_pp r0.xy, r0, r0
    mul r0.z, r0_abs.z, c3.x
    exp_pp r0.z, r0.z
    mul_pp r2.xy, r1.x, r0
    dp3_sat_pp r0.x, r5, r2
    dp3_sat_pp r0.y, r6, r2
    dp3_sat_pp r0.w, r6, -r3
    mul r0.w, r0.w, c4.x
    exp r0.w, r0.w
    pow_pp r1.x, r0.y, r0.z
    mad_pp r0.y, r0.z, c4.y, c4.z
    mul_pp r1.yzw, r0.x, r4.xxyz
    texldp_pp r2, v3, s2
    add r0.xz, -r2.w, c3.yyzw
    cmp_pp r3.xyz, r0.z, c2.w, r2
    mul_pp r4.xyz, r2.w, r3
    mad_pp r3.xyz, r2.w, -r3, c2.w
    mul_pp r2.xyz, r1.yzww, r2
    mul_pp r2.xyz, r0.x, r2
    mad r0.xzw, r3.xyyz, r0.w, r4.xyyz
    mul_pp r0.xzw, r0, r1.yyzw
    mul_pp r0.xzw, r1.x, r0
    mad_pp oC0.xyz, r0.xzww, r0.y, r2
    mov_pp oC0.w, c2.z

// approximately 56 instruction slots used (3 texture, 53 arithmetic)
