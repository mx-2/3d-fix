// Moon and other objects
// broken in HLSL
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
//
// Buffer Definitions: 
//
// cbuffer cb_Globals
// {
//
//   struct SGlobalConstants
//   {
//       
//       float4x4 m_matViewProjection;  // Offset:    0
//       float4x4 m_matInvProjection;   // Offset:   64
//       float4x4 m_matProjection;      // Offset:  128
//       float4x4 m_matView;            // Offset:  192
//       float4x4 m_matCameraViewProjection;// Offset:  256
//       float4x4 m_matCameraProjection;// Offset:  320
//       float4 m_frustumPlanes[6];     // Offset:  384
//       float3 m_vecCamPos;            // Offset:  480
//       float m_fFar;                  // Offset:  492
//       float3 m_vecWorldCamPos;       // Offset:  496
//       float m_fRcpFar;               // Offset:  508
//       float3 m_vecRenderOffset;      // Offset:  512
//       float m_fNear;                 // Offset:  524
//       float3 m_vecCamDir;            // Offset:  528
//       float m_fExposure;             // Offset:  540
//       float2 m_vecViewPortSize;      // Offset:  544
//       float2 m_vecRcpViewPortSize;   // Offset:  552
//       float2 m_vecDistortionScale;   // Offset:  560
//       float m_fFoV;                  // Offset:  568
//       float _padding0;               // Offset:  572
//       float m_fCamAzimuth;           // Offset:  576
//       float m_fTime;                 // Offset:  580
//       float m_fFrameTime;            // Offset:  584
//       float m_fAdaptiveTessellationFactor;// Offset:  588
//       float2 m_vecMiePhaseConstants; // Offset:  592
//       float m_fOceanWaterLevel;      // Offset:  600
//       float m_fRenderOffsetOceanWaterLevel;// Offset:  604
//       float4 m_vecOceanColorAndOpacity;// Offset:  608
//       float2 m_vecOceanTexCoordScale;// Offset:  624
//       float2 m_vecRcpOceanTexCoordScale;// Offset:  632
//       float m_fWeatherTemperature;   // Offset:  640
//       float2 m_vecZToDepth;          // Offset:  644
//       float _padding1;               // Offset:  652
//       float3 m_vecSunDir;            // Offset:  656
//       float _padding2;               // Offset:  668
//
//   } Globals;                         // Offset:    0 Size:   672
//
// }
//
// cbuffer cb_InstanceData
// {
//
//   struct SDefaultInstanceData
//   {
//       
//       struct SDefaultInstance
//       {
//           
//           float4 m_vecObjectColor;   // Offset:    0
//           float4x3 m_matTransform;   // Offset:   16
//
//       } m_arrInstances[256];         // Offset:    0
//
//   } InstanceData;                    // Offset:    0 Size: 16384
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cb_Globals                        cbuffer      NA          NA    0        1
// cb_InstanceData                   cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// COLOR                    0   xyzw        3     NONE   float       
// TEXCOORD                 0   xy          4     NONE   float   xy  
// TEXCOORD                 1   xy          5     NONE   float       
// TEXCOORD                 2   xy          6     NONE   float       
// TEXCOORD                 3   xy          7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// WORLDPOS                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyz         2     NONE   float   xyz 
// BINORMAL                 0   xyz         3     NONE   float   xyz 
// TEXCOORD                 0   xy          4     NONE   float   xy  
// DOMAINDATA               0   x           5     NONE    uint   x   
// SV_Position              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[1024], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v4.xy
dcl_input_sgv v8.x, instance_id
dcl_output o0.xyz
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_output o5.x
dcl_output_siv o6.xyzw, position
dcl_temps 5
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
ishl r1.x, v8.x, l(2)
dp4 r2.x, r0.xyzw, cb1[r1.x + 1].xyzw
dp4 r2.y, r0.xyzw, cb1[r1.x + 2].xyzw
dp4 r2.z, r0.xyzw, cb1[r1.x + 3].xyzw
mov o0.xyz, r2.xyzx
mad r0.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.x, r0.xyzx, cb1[r1.x + 1].xyzx
dp3 r3.y, r0.xyzx, cb1[r1.x + 2].xyzx
dp3 r3.z, r0.xyzx, cb1[r1.x + 3].xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r3.xyzx
mov o1.xyz, r0.xyzx
mad r3.xyzw, v2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
dp3 r4.x, r3.xyzx, cb1[r1.x + 1].xyzx
dp3 r4.y, r3.xyzx, cb1[r1.x + 2].xyzx
dp3 r4.z, r3.xyzx, cb1[r1.x + 3].xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r4.xyzx
mov o2.xyz, r1.xyzx
mul r3.xyz, r0.yzxy, r1.zxyz
mad r0.xyz, r1.yzxy, r0.zxyz, -r3.xyzx
mul o3.xyz, r3.wwww, r0.xyzx
mov o4.xy, v4.xyxx
mov o5.x, v8.x
mov r2.w, l(1.000000)
	// push moon to infinity
	mul r2.xyz, r2.xyz, l(1.0e3)
dp4 o6.x, r2.xyzw, cb0[0].xyzw
dp4 o6.y, r2.xyzw, cb0[1].xyzw
dp4 o6.z, r2.xyzw, cb0[2].xyzw
dp4 o6.w, r2.xyzw, cb0[3].xyzw
ret 
// Approximately 34 instruction slots used
