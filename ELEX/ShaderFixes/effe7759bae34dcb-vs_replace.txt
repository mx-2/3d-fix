// HUD 2 (minimap and others)

cbuffer para : register(b0)
{
  float4 world0 : packoffset(c0);
  float4 world1 : packoffset(c1);
  float4 x_off : packoffset(c2);
  float4 texgen_s : packoffset(c3);
  float4 texgen_t : packoffset(c4);
  float4 x3d : packoffset(c5);
  float4 y3d : packoffset(c6);
  float4 w3d : packoffset(c7);
}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : POSITION0,
  int4 v1 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = (int3)v1.yzx;
  r0.xyz = float3(0.015625,0.015625,0.03125) * r0.xyz;
  r1.x = dot(r0.xy, x_off.xy);
  r1.y = dot(r0.xy, x_off.zw);
  r2.x = dot(r1.xy, world0.xy);
  r2.y = dot(r1.xy, world1.xy);
  r0.w = dot(r2.xy, r2.xy);
  r0.w = sqrt(r0.w);
  r1.x = cmp(0 != r0.w);
  r0.w = r1.x ? r0.w : 1;
  r0.x = dot(r0.xy, r0.xy);
  r0.x = sqrt(r0.x);
  r0.x = r0.x / r0.w;
  r1.x = dot(v0.xyzw, world0.xyzw);
  r1.y = dot(v0.xyzw, world1.xyzw);
  r0.xy = r2.xy * r0.xx + r1.xy;
  r1.xyz = y3d.xyz * r0.yyy;
  r0.xyw = r0.xxx * x3d.xyz + r1.xyz;
  r0.xyw = w3d.xyz + r0.xyw;
  r0.w = 1 / r0.w;
  o0.xy = r0.xy * r0.ww;
  o0.z = world0.z;
  o0.w = 1;
  r0.x = dot(texgen_s.xyzw, v0.xyzw);
  r0.y = dot(texgen_t.xyzw, v0.xyzw);
  o1.xyz = r0.xyz * r0.www;
  o1.w = r0.w;

float4 filter = IniParams.Load(int2(2,0));
if(filter.x == 0)
{
  float4 stereo = StereoParams.Load(0);
  float4 params = IniParams.Load(0);
  o0.x += stereo.x * params.x;
}
  return;
}
