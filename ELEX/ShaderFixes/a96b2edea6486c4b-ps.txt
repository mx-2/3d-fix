// Main menu HEX pattern
// Using HLSL causes z-fighting
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float2 ViewSize;                   // Offset:    0 Size:     8 [unused]
//   float2 VideoSize;                  // Offset:    8 Size:     8 [unused]
//   bool VideoFullScreen;              // Offset:   16 Size:     4 [unused]
//   bool UIMode;                       // Offset:   20 Size:     4
//   float Time;                        // Offset:   24 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// SmpLin                            sampler      NA          NA    0        1
// VideoFrame                        texture  float4          2d    0        1
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
//dcl_temps 6
	dcl_resource_texture1d (float,float,float,float) t120	// ini params
	dcl_resource_texture2d (float,float,float,float) t125	// stereo
	dcl_temps 8

if_nz cb0[1].y
  sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)

  mad r1.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r1.x, r1.xyxx, l(0.707000, -0.707000, 0.000000, 0.000000)
  mad r1.x, r1.x, l(0.500000), l(-0.500000)
  mov_sat r1.x, -r1.x
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mul r1.x, r1.x, r1.y
  dp3 r1.y, r0.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mul r1.xz, r1.xxxx, l(0.800000, 0.000000, 0.100000, 0.000000)
  mad r2.xyz, r1.yyyy, l(0.000000, 0.0117647061, 0.0823529437, 0.000000), -r0.xyzx
  mad r0.xyz, r1.xxxx, r2.xyzx, r0.xyzx

// Fix HEX pattern 
ld_indexable(texture1d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t120.xyzw
ld_indexable(texture1d)(float,float,float,float) r6.z, l(1, 0, 0, 0), t120.zwxy
ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw
add r6.x, r6.x, l(0.1)
mul r6.x, r6.x, r7.x
mul r6.z, r6.z, -l(0.5)
mul r6.x, r6.x, r6.z
mov r7.xy, v0.xy
add r7.x, r7.x, r6.x
mul r1.x, r7.x, l(0.144337580)
dp2 r1.y, r7.yxyy, l(0.125000, 0.0721687898, 0.000000, 0.000000)

//  mul r1.x, v0.x, l(0.144337580)
//  dp2 r1.y, v0.yxyy, l(0.125000, 0.0721687898, 0.000000, 0.000000)

  round_ni r1.w, r1.x
  round_ni r2.x, r1.y
  frc r3.xy, r1.yxyy
  add r1.x, r1.w, r2.x
  mul r1.x, r1.x, l(0.333333343)
  ge r1.y, r1.x, -r1.x
  frc r1.x, |r1.x|
  movc r1.x, r1.y, r1.x, -r1.x
  ge r1.xy, r1.xxxx, l(0.333333343, 0.666666687, 0.000000, 0.000000)
  and r1.xy, r1.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
  ge r2.xy, r3.xyxx, r3.yxyy
  and r2.xy, r2.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
  add r2.zw, -r3.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  add r1.w, r3.x, r3.y
  add r1.w, r1.w, l(-1.000000)
  mad r1.xw, r1.xxxx, r1.wwww, r2.zzzw
  mad r2.zw, -r3.yyyx, l(0.000000, 0.000000, 2.000000, 2.000000), r3.xxxy
  mad r1.xy, r1.yyyy, r2.zwzz, r1.xwxx
  dp2 r1.x, r2.xyxx, r1.xyxx
  add r1.x, r1.x, l(-0.100000)
  mul_sat r1.x, r1.x, l(10.000000)
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mul r1.x, r1.x, r1.y
  mul r2.xyz, r1.xxxx, l(0.000000, 1.000000, 1.000000, 0.000000)
  lt r1.y, l(0.500000), r1.x
  and r1.y, r1.y, l(0x3f800000)
  mov r3.xyz, -r0.xyzx
  add r4.xy, r3.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
  mad r5.xyz, r1.xxxx, l(1.000000, 0.000000, 1.000000, 0.000000), l(-0.500000, 0.500000, 0.500000, 0.000000)
  add r1.x, -r5.x, l(1.000000)
  mad r1.xw, -r4.xxxy, r1.xxxx, l(1.000000, 0.000000, 0.000000, 1.000000)
  mul r4.yz, r1.xxwx, r1.yyyy
  ge r1.xyw, l(0.500000, 0.500000, 0.000000, 0.500000), r2.xyxz
  and r1.xyw, r1.xyxw, l(0x3f800000, 0x3f800000, 0, 0x3f800000)
  mul r2.xyz, r0.xyzx, r5.yzzy
  mov r4.w, r3.x
  mad r1.xyw, r1.xyxw, r2.xyxz, r4.wywz
  mov r3.w, l(0)
  add r1.xyw, r3.wywz, r1.xyxw
  mad o0.xyz, r1.zzzz, r1.xywx, r0.xyzx
  mov o0.w, r0.w
  ret 
endif 
sample_indexable(texture2d)(float,float,float,float) o0.xyzw, v1.xyxx, t0.xyzw, s0
ret 
// Approximately 61 instruction slots used
