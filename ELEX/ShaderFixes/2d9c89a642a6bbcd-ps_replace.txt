// Rain illuminance

cbuffer CBRain : register(b0)
{

  struct
  {
    float4 LayerUVRotation[4];
    float4 LayerUVScaleAndOffset[4];
    float4 LayerDepthScaleAndOffset[4];
    float4 NoiseScaleAndOffset;
    float3 ShadowMapScale;
    float SoftDepthFactor;
    float3 ShadowMapOffset;
    float FarClip;
    float3 CamDir;
    float Exposure;
    float3 FogDelpthToSlice;
    float AlbedoMulExposure;
    float2 RcpRenderTargetSize;
    float Alpha;
    float _padding0;
    float4x4 CylinderMatrix;
    float4x4 RainViewProjectionMatrix;
  } Settings : packoffset(c0);

}

SamplerState SmpClampLin_s : register(s0);
SamplerState SmpWrapLin_s : register(s1);
Texture2D<float2> RainTexture : register(t0);
Texture2D<float4> RainMaskTexture : register(t1);
Texture3D<float4> IlluminanceVolume : register(t2);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORDS1,
  float4 v2 : TEXCOORDS23,
  float3 v3 : DIR0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = dot(v3.xyz, v3.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = v3.xyz * r0.xxx;
  r0.x = dot(r0.xyz, Settings.CamDir.xyz);
  r1.xy = RainTexture.Sample(SmpWrapLin_s, v1.xy).xy;
  r2.x = r1.y * Settings.LayerDepthScaleAndOffset[0].x + Settings.LayerDepthScaleAndOffset[0].y;
  r0.yz = RainTexture.Sample(SmpWrapLin_s, v1.zw).xy;
  r2.y = r0.z * Settings.LayerDepthScaleAndOffset[1].x + Settings.LayerDepthScaleAndOffset[1].y;
  r0.zw = RainTexture.Sample(SmpWrapLin_s, v2.xy).xy;
  r2.z = r0.w * Settings.LayerDepthScaleAndOffset[2].x + Settings.LayerDepthScaleAndOffset[2].y;
  r3.xy = RainTexture.Sample(SmpWrapLin_s, v2.zw).xy;
  r2.w = r3.y * Settings.LayerDepthScaleAndOffset[3].x + Settings.LayerDepthScaleAndOffset[3].y;
  r2.xyzw = r2.xyzw * r0.xxxx;
  r4.yzw = float3(1.5,2,3);
  r5.xy = Settings.RcpRenderTargetSize.xy * v0.xy;
  r6.xyzw = RainMaskTexture.SampleLevel(SmpClampLin_s, r5.xy, 0).xyzw;
  r1.yz = r6.yz * r0.yz;
  r1.w = r6.w * r3.x;
  r4.x = r6.x;
  r0.xyzw = r4.xyzw * r1.xyzw;
  r1.x = dot(r2.xyzw, r0.xyzw);
  r0.w = dot(r0.xyzw, float4(1,1,1,1));
  r1.x = r1.x / r0.w;
  r1.x = Settings.FogDelpthToSlice.x + r1.x;
  r1.x = log2(r1.x);
  r5.z = r1.x * Settings.FogDelpthToSlice.y + Settings.FogDelpthToSlice.z;

// Fix rain illuminance next to point lights.
float4 stereo = StereoParams.Load(0);
r5.x -= stereo.x * 0.5;

  r1.xyz = IlluminanceVolume.SampleLevel(SmpClampLin_s, r5.xyz, 0).xyz;
  r1.w = Settings.AlbedoMulExposure * r0.w;
  r0.xyz = r1.xyz * r1.www;
  o0.xyzw = Settings.Alpha * r0.xyzw;
  return;
}
