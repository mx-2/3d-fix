//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
// Parameters:
//
//   sampler2D DepthSampler;
//   row_major float4x4 InvViewProj;
//   float2 ShadowFadeParam;
//   float2 ShadowLightParam;
//   float4 ShadowMapProj[8];
//   sampler2D ShadowMapSampler;
//   float4 ShadowSampleParam;
//   float4 VPOSOffset;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   ShadowMapProj     c0       4
//   InvViewProj       c4       4
//   ShadowFadeParam   c8       1
//   ShadowLightParam  c9       1
//   ShadowSampleParam c10      1
//   VPOSOffset        c11      1
//   ShadowMapSampler  s0       1
//   DepthSampler      s1       1
//

// Nchuand-Zel and Dustmans Cairn shadows

    ps_3_0
    def c12, 1, 2, -1, 0
    def c13, 0.5, 0, 1, 0
def c200, 1, 0.0667, 0.0625, 1
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
dcl_2d s13
    mad r0.xy, vPos, c11, c11.zwzw
    add r0.z, -r0.y, c12.x
    mad r1.xy, r0.xzzw, c12.y, c12.z
    texld r0, r0, s1
    mad r1.zw, r0.x, c12.xyxw, c12.xywx

texld r31, c200.z, s13

// Scale depth buffer and add offset
// scale = 0.06667 * convergence
// offset = 1 - scale

mul r30.w, r31.y, c200.y	// conv * 0.0667
add r30.z, -r30.w, c200.x	// 1 - scale

mul r31.w, r0.x, r30.w		// depth * scale
add r31.w, r31.w, r30.z		// depth * scale + offset
mul r31.w, r31.w, r31.x		// * separation
add r1.x, r1.x, -r31.w		// apply fix

    dp4 r0.x, c7, r1
    rcp r0.x, r0.x
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    mul r0.xyz, r0.x, r2
    mov r0.w, c12.x
    dp4 r1.x, c3, r0
    rcp r1.x, r1.x
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    dp3 r0.x, r0, r0
    mul r0.yzw, r1.x, r2.xxyz
    mad r1.x, r2.z, c13.x, c13.x
    dp3 r1.y, r0.yzww, r0.yzww
    rsq r1.y, r1.y
    rcp r1.z, r1.y
    mad r0.yzw, r0, r1.y, c12.xwwx
    nrm r2.xyz, r0.yzww
    rcp r0.y, c9.x
    mul_sat r0.y, r0.y, r1.z
    add r0.y, r0.y, -c10.x
    rcp r0.z, r2.z
    mul r0.zw, r0.z, r2.xyxy
    mul r2.xy, r0.zwzw, c13.x
    mad r2.zw, r0.xywz, c13.x, c13.x
    mad r0.zw, r0, c13.x, c13.x
    mov r3.xyz, c13
    mad r3, c10.wwzw, r3.yzzy, r3.xyyx
    add r1.yz, r2.xxzw, r3.xxyw
    add r2.xy, r2.wyzw, r3.zwzw
    texld r2, r2, s0
    mov r2.z, r2.x
    texld r3, r1.yzzw, s0
    mov r2.y, r3.x
    add r1.yz, r0.xzww, c10.xzww
    texld r3, r1.yzzw, s0
    mov r2.w, r3.x
    texld r3, r0.zwzw, s0
    mov r2.x, r3.x
    add r2, -r0.y, r2
    cmp r2, r2, c12.x, c12.w
    rcp r1.z, c10.z
    rcp r1.y, c10.w
    mul r0.yz, r0.xwzw, r1
    frc r0.yz, r0
    add r1.yz, -r0.xzyw, c12.x
    mul r3.yz, r0, r1
    mul r3.w, r0.y, r0.z
    mul r3.x, r1.z, r1.y
    dp4 r0.y, r2, r3
    cmp r0.y, r1.x, r0.y, c12.x
    rcp r0.z, c8.x
    mul_sat r0.x, r0.z, r0.x
    mul r0.x, r0.x, r0.x
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, -r0.x, c12.x
    mul oC0, r0.y, r0.x

// approximately 66 instruction slots used (5 texture, 61 arithmetic)

