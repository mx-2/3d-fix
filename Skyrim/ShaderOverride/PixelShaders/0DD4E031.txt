//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
// Parameters:
//
//   sampler2D DepthSampler;
//   row_major float4x4 InvViewProj;
//   float2 ShadowFadeParam;
//   float4 ShadowMapProj[6];
//   sampler2D ShadowMapSampler;
//   float4 ShadowSampleParam;
//   float4 SplitDistances;
//   float4 VPOSOffset;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   ShadowMapProj     c0       6
//   InvViewProj       c6       4
//   ShadowFadeParam   c10      1
//   ShadowSampleParam c11      1
//   VPOSOffset        c12      1
//   SplitDistances    c13      1
//   ShadowMapSampler  s0       1
//   DepthSampler      s1       1
//

    ps_3_0
    def c14, 1, 2, -1, 0
	def c200, 0.0, 1.0, 0.0625, 0.6
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
	dcl_2d s13
    mad r0.xy, vPos, c12, c12.zwzw
    add r0.z, -r0.y, c14.x
    mad r1.xy, r0.xzzw, c14.y, c14.z
    texld r0, r0, s1
    mad r1.zw, r0.x, c14.xyxw, c14.xywx
    
    dp4 r0.y, c9, r1
    rcp r0.y, r0.y
    dp4 r2.x, c6, r1
    dp4 r2.y, c7, r1
    dp4 r2.z, c8, r1
	
	texldl r12, c200.z, s13
	
	if_ne r12.x, c200.x	
		mul r13.xyz, r0.y, r2
		mov r13.w, c14.x
	
		dp4 r11.x, c100, r13
		dp4 r11.y, c101, r13
		dp4 r11.z, c102, r13
		dp4 r11.w, c103, r13

	
	
		add r12.y, r11.w, -r12.y
		mul r12.x, r12.x, r12.y
		add r11.x, r11.x, -r12.x	
	
		dp4 r0.y, c9, r11
		rcp r0.y, r0.y
		dp4 r2.x, c6, r11
		dp4 r2.y, c7, r11
		dp4 r2.z, c8, r11
	endif
	
	mul r1.xyz, r0.y, r2
	mov r1.w, c14.x
	add r0.x, -r0.x, c13.x
    mov r2, c2
    cmp r2, r0.x, r2, c5
    mov r1.w, c14.x
    dp4 r0.y, r2, r1
    cmp r0.z, r0.x, c11.x, c11.y
    add r0.y, -r0.z, r0.y
    mov r2, c0
    cmp r2, r0.x, r2, c3
    mov r3, c1
    cmp r3, r0.x, r3, c4
    dp4 r3.y, r3, r1
    dp4 r3.x, r2, r1
    dp3 r0.x, r1, r1
    mov r1.xw, c14
    mad r0.zw, c11.w, r1.xywx, r3.xyxy
    texld r2, r0.zwzw, s0
    mov r2.y, r2.x
    mad r0.zw, c11, r1.xyxw, r3.xyxy
    texld r1, r0.zwzw, s0
    mov r2.z, r1.x
    add r0.zw, r3.xyxy, c11
    texld r1, r0.zwzw, s0
    mov r2.w, r1.x
    texld r1, r3, s0
    mov r2.x, r1.x
    add r1, -r0.y, r2
    cmp r1, r1, c14.x, c14.w
    rcp r0.z, c11.z
    rcp r0.y, c11.w
    mul r0.yz, r0, r3.xyxw
    frc r0.yz, r0
    add r2.xy, -r0.zyzw, c14.x
    mul r3.yz, r0, r2.xxyw
    mul r3.w, r0.y, r0.z
    mul r3.x, r2.y, r2.x
    dp4 r0.y, r1, r3
    add r0.y, r0.y, c14.z
    rcp r0.z, c10.x
    mul_sat r0.x, r0.z, r0.x
    mul r0.x, r0.x, r0.x
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, -r0.x, c14.x
    mad oC0, r0.x, r0.y, c14.x
	


// approximately 55 instruction slots used (5 texture, 50 arithmetic)
