//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
// Parameters:
//
//   sampler2D DepthSampler;
//   row_major float4x4 InvViewProj;
//   float2 ShadowFadeParam;
//   float2 ShadowLightParam;
//   float4 ShadowMapProj[8];
//   sampler2D ShadowMapSampler;
//   float4 ShadowSampleParam;
//   float4 VPOSOffset;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   ShadowMapProj     c0       4
//   InvViewProj       c4       4
//   ShadowFadeParam   c8       1
//   ShadowLightParam  c9       1
//   ShadowSampleParam c10      1
//   VPOSOffset        c11      1
//   ShadowMapSampler  s0       1
//   DepthSampler      s1       1
//

    ps_3_0
    def c12, 1, 2, -1, 0
    def c13, 0.5, 1, 0, 0
	def c200, 0.0, 1.0, 0.0625, 0.6
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
	dcl_2d s13
    mad r0.xy, vPos, c11, c11.zwzw
    add r0.z, -r0.y, c12.x
    mad r1.xy, r0.xzzw, c12.y, c12.z
    texld r0, r0, s1
    mad r1.zw, r0.x, c12.xyxw, c12.xywx
	
	dp4 r0.x, c7, r1
    rcp r0.x, r0.x
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
	
	texldl r12, c200.z, s13
	
	if_ne r12.x, c200.x	
		mul r13.xyz, r0.x, r2
		mov r13.w, c12.x
	
		dp4 r11.x, c100, r13
		dp4 r11.y, c101, r13
		dp4 r11.z, c102, r13
		dp4 r11.w, c103, r13

	
	
		add r12.y, r11.w, -r12.y
		mul r12.x, r12.x, r12.y
		add r11.x, r11.x, -r12.x	
	
	
		dp4 r0.x, c7, r11
		rcp r0.x, r0.x
		dp4 r2.x, c4, r11
		dp4 r2.y, c5, r11
		dp4 r2.z, c6, r11
	endif
	
    mul r0.xyz, r0.x, r2
    mov r0.w, c12.x
    dp4 r1.x, c3, r0
    rcp r1.x, r1.x
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    dp3 r0.x, r0, r0
    mul r0.yzw, r1.x, r2.xxyz
    mad r1.x, r2.z, c13.x, c13.x
    dp3 r1.y, r0.yzww, r0.yzww
    rsq r1.y, r1.y
    rcp r1.z, r1.y
    rcp r1.w, c9.x
    mul_sat r1.z, r1.w, r1.z
    add r1.z, r1.z, -c10.x
    cmp r2.xyz, r1.x, c12.wwxw, c12.wwzw
    mad r0.yzw, r0, r1.y, r2.xxyz
    nrm r2.xyz, r0.yzww
    rcp r0.y, r2.z
    mul r0.yz, r0.y, r2.xxyw
    mul r2.x, r0.y, c13.x
    mad r3.xy, r0.yzzw, c13.x, c13.x
    mul r0.y, r3.y, c13.x
    mad r0.z, r3.y, -c13.x, c13.y
    cmp r3.z, r1.x, r0.y, r0.z
    mov r2.z, r3.z
    mov r4.xyz, c13
    mad r0.yz, c10.w, r4.xzyw, r4.xxzw
    add r0.yz, r0, r2.xxzw
    texld r2, r0.yzzw, s0
    mov r2.y, r2.x
    mov r1.xw, c12
    mad r0.yz, c10.z, r1.xxww, r3.xxzw
    texld r4, r0.yzzw, s0
    mov r2.z, r4.x
    add r0.yz, r3.xxzw, c10.xzww
    texld r4, r0.yzzw, s0
    mov r2.w, r4.x
    texld r4, r3.xzzw, s0
    mov r2.x, r4.x
    add r1, -r1.z, r2
    cmp r1, r1, c12.x, c12.w
    rcp r0.z, c10.z
    rcp r0.y, c10.w
    mul r0.yz, r0, r3.xzxw
    frc r0.yz, r0
    add r2.xy, -r0.zyzw, c12.x
    mul r3.yz, r0, r2.xxyw
    mul r3.w, r0.y, r0.z
    mul r3.x, r2.y, r2.x
    dp4 r0.y, r1, r3
    rcp r0.z, c8.x
    mul_sat r0.x, r0.z, r0.x
    mul r0.x, r0.x, r0.x
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, -r0.x, c12.x
    mul oC0, r0.y, r0.x

// approximately 70 instruction slots used (5 texture, 65 arithmetic)
