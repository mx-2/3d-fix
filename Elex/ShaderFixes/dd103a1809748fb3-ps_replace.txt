// Far shadows from sun

cbuffer _Globals : register(b0)
{
  float3 LightDir : packoffset(c0);
  float4x4 ShadowVolumeTransform : packoffset(c1);
  float4 Unproject : packoffset(c5);
  float4x4 EyeToLightSpace : packoffset(c6);
  float2 CascadeShadowSettings : packoffset(c10);
  float CascadeIndex : packoffset(c10.z);
  float CascadeShadowMapSize : packoffset(c10.w);
  float2 RcpDeferredShadowMapSize : packoffset(c11);
}

SamplerComparisonState SmpLessClampLinear_s : register(s0);
Texture2D<float> LinearDepth : register(t0);
Texture2DArray<float> CascadeShadowMap : register(t1);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_Position0,
  out float o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.z = CascadeIndex;
  r1.xy = (int2)v0.xy;
  r1.zw = float2(0,0);
  r1.z = LinearDepth.Load(r1.xyz).x;
  r2.xy = v0.xy * Unproject.xy + Unproject.zw;

// Approximate offset and scale constants, this is far from perfect
float4 stereo = StereoParams.Load(0);
float scale = 4;
float offset = 1.07 - stereo.y * 0.00333333;
r2.x -= stereo.x * (r1.z * scale + offset);

  r1.xy = r2.xy * r1.zz;
  r1.w = 1;
  r2.x = dot(r1.xyzw, EyeToLightSpace._m00_m10_m20_m30);
  r2.y = dot(r1.xyzw, EyeToLightSpace._m01_m11_m21_m31);
  r0.w = dot(r1.xyzw, EyeToLightSpace._m02_m12_m22_m32);
  r0.w = -CascadeShadowSettings.x + r0.w;
  r1.xy = r2.xy * CascadeShadowMapSize + float2(0.5,0.5);
  r1.zw = floor(r1.xy);
  r1.xy = r1.xy + -r1.zw;
  r1.zw = float2(-0.5,-0.5) + r1.zw;
  r2.xy = float2(2,2) + -r1.xy;
  r2.zw = -r1.yx * float2(2,2) + float2(3,3);
  r2.xy = r2.xy / r2.wz;
  r3.zw = float2(-1,-1) + r2.xy;
  r2.xy = r1.xy * float2(2,2) + float2(1,1);
  r1.xy = r1.xy / r2.xy;
  r3.xy = float2(1,1) + r1.xy;
  r1.x = 1 / CascadeShadowMapSize;
  r4.xyzw = r3.zwxw * r1.xxxx;
  r3.xyzw = r3.zyxy * r1.xxxx;
  r0.xy = r1.zw * r1.xx + r4.zw;
  r4.xy = r1.zw * r1.xx + r4.xy;
  r0.x = CascadeShadowMap.SampleCmpLevelZero(SmpLessClampLinear_s, r0.xyz, r0.w).x;
  r0.yz = r2.xy * r2.zw;
  r1.y = r2.w * r2.z;
  r2.x = r2.x * r2.y;
  r0.x = r0.y * r0.x;
  r4.z = CascadeIndex;
  r0.y = CascadeShadowMap.SampleCmpLevelZero(SmpLessClampLinear_s, r4.xyz, r0.w).x;
  r0.x = r1.y * r0.y + r0.x;
  r4.xy = r1.zw * r1.xx + r3.xy;
  r1.xy = r1.zw * r1.xx + r3.zw;
  r4.z = CascadeIndex;
  r0.y = CascadeShadowMap.SampleCmpLevelZero(SmpLessClampLinear_s, r4.xyz, r0.w).x;
  r0.x = r0.z * r0.y + r0.x;
  r1.z = CascadeIndex;
  r0.y = CascadeShadowMap.SampleCmpLevelZero(SmpLessClampLinear_s, r1.xyz, r0.w).x;
  r0.x = r2.x * r0.y + r0.x;
  o0.x = 0.0625 * r0.x;
  return;
}
